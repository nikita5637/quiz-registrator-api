// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: game/game.proto

package game

import (
	reflect "reflect"
	sync "sync"

	league "github.com/nikita5637/quiz-registrator-api/pkg/pb/league"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameType int32

const (
	GameType_GAME_TYPE_INVALID                   GameType = 0
	GameType_GAME_TYPE_CLASSIC                   GameType = 1
	GameType_GAME_TYPE_THEMATIC                  GameType = 2
	GameType_GAME_TYPE_MOVIES_AND_MUSIC          GameType = 5
	GameType_GAME_TYPE_CLOSED                    GameType = 6
	GameType_GAME_TYPE_THEMATIC_MOVIES_AND_MUSIC GameType = 9
)

// Enum value maps for GameType.
var (
	GameType_name = map[int32]string{
		0: "GAME_TYPE_INVALID",
		1: "GAME_TYPE_CLASSIC",
		2: "GAME_TYPE_THEMATIC",
		5: "GAME_TYPE_MOVIES_AND_MUSIC",
		6: "GAME_TYPE_CLOSED",
		9: "GAME_TYPE_THEMATIC_MOVIES_AND_MUSIC",
	}
	GameType_value = map[string]int32{
		"GAME_TYPE_INVALID":                   0,
		"GAME_TYPE_CLASSIC":                   1,
		"GAME_TYPE_THEMATIC":                  2,
		"GAME_TYPE_MOVIES_AND_MUSIC":          5,
		"GAME_TYPE_CLOSED":                    6,
		"GAME_TYPE_THEMATIC_MOVIES_AND_MUSIC": 9,
	}
)

func (x GameType) Enum() *GameType {
	p := new(GameType)
	*p = x
	return p
}

func (x GameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_game_proto_enumTypes[0].Descriptor()
}

func (GameType) Type() protoreflect.EnumType {
	return &file_game_game_proto_enumTypes[0]
}

func (x GameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameType.Descriptor instead.
func (GameType) EnumDescriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{0}
}

type Payment int32

const (
	Payment_PAYMENT_INVALID     Payment = 0
	Payment_PAYMENT_CASH        Payment = 1
	Payment_PAYMENT_CERTIFICATE Payment = 2
	Payment_PAYMENT_MIXED       Payment = 3
)

// Enum value maps for Payment.
var (
	Payment_name = map[int32]string{
		0: "PAYMENT_INVALID",
		1: "PAYMENT_CASH",
		2: "PAYMENT_CERTIFICATE",
		3: "PAYMENT_MIXED",
	}
	Payment_value = map[string]int32{
		"PAYMENT_INVALID":     0,
		"PAYMENT_CASH":        1,
		"PAYMENT_CERTIFICATE": 2,
		"PAYMENT_MIXED":       3,
	}
)

func (x Payment) Enum() *Payment {
	p := new(Payment)
	*p = x
	return p
}

func (x Payment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Payment) Descriptor() protoreflect.EnumDescriptor {
	return file_game_game_proto_enumTypes[1].Descriptor()
}

func (Payment) Type() protoreflect.EnumType {
	return &file_game_game_proto_enumTypes[1]
}

func (x Payment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Payment.Descriptor instead.
func (Payment) EnumDescriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{1}
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId  *wrapperspb.Int32Value  `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	LeagueId    league.LeagueID         `protobuf:"varint,3,opt,name=league_id,json=leagueId,proto3,enum=league.LeagueID" json:"league_id,omitempty"`
	Type        GameType                `protobuf:"varint,4,opt,name=type,proto3,enum=game.GameType" json:"type,omitempty"`
	Number      string                  `protobuf:"bytes,5,opt,name=number,proto3" json:"number,omitempty"`
	Name        *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	PlaceId     int32                   `protobuf:"varint,7,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
	Date        *timestamppb.Timestamp  `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`
	Price       uint32                  `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	PaymentType *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"` // cash, card
	MaxPlayers  uint32                  `protobuf:"varint,11,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	Payment     *Payment                `protobuf:"varint,12,opt,name=payment,proto3,enum=game.Payment,oneof" json:"payment,omitempty"`
	Registered  bool                    `protobuf:"varint,13,opt,name=registered,proto3" json:"registered,omitempty"`
	IsInMaster  bool                    `protobuf:"varint,14,opt,name=is_in_master,json=isInMaster,proto3" json:"is_in_master,omitempty"`
	// additional info
	HasPassed bool                    `protobuf:"varint,15,opt,name=has_passed,json=hasPassed,proto3" json:"has_passed,omitempty"`
	GameLink  *wrapperspb.StringValue `protobuf:"bytes,16,opt,name=game_link,json=gameLink,proto3" json:"game_link,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{0}
}

func (x *Game) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Game) GetExternalId() *wrapperspb.Int32Value {
	if x != nil {
		return x.ExternalId
	}
	return nil
}

func (x *Game) GetLeagueId() league.LeagueID {
	if x != nil {
		return x.LeagueId
	}
	return league.LeagueID(0)
}

func (x *Game) GetType() GameType {
	if x != nil {
		return x.Type
	}
	return GameType_GAME_TYPE_INVALID
}

func (x *Game) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Game) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Game) GetPlaceId() int32 {
	if x != nil {
		return x.PlaceId
	}
	return 0
}

func (x *Game) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Game) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Game) GetPaymentType() *wrapperspb.StringValue {
	if x != nil {
		return x.PaymentType
	}
	return nil
}

func (x *Game) GetMaxPlayers() uint32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *Game) GetPayment() Payment {
	if x != nil && x.Payment != nil {
		return *x.Payment
	}
	return Payment_PAYMENT_INVALID
}

func (x *Game) GetRegistered() bool {
	if x != nil {
		return x.Registered
	}
	return false
}

func (x *Game) GetIsInMaster() bool {
	if x != nil {
		return x.IsInMaster
	}
	return false
}

func (x *Game) GetHasPassed() bool {
	if x != nil {
		return x.HasPassed
	}
	return false
}

func (x *Game) GetGameLink() *wrapperspb.StringValue {
	if x != nil {
		return x.GameLink
	}
	return nil
}

type BatchGetGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *BatchGetGamesRequest) Reset() {
	*x = BatchGetGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetGamesRequest) ProtoMessage() {}

func (x *BatchGetGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetGamesRequest.ProtoReflect.Descriptor instead.
func (*BatchGetGamesRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{1}
}

func (x *BatchGetGamesRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type BatchGetGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*Game `protobuf:"bytes,2,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *BatchGetGamesResponse) Reset() {
	*x = BatchGetGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchGetGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetGamesResponse) ProtoMessage() {}

func (x *BatchGetGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetGamesResponse.ProtoReflect.Descriptor instead.
func (*BatchGetGamesResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{2}
}

func (x *BatchGetGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type CreateGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game *Game `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGameRequest) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type DeleteGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGameRequest) Reset() {
	*x = DeleteGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGameRequest) ProtoMessage() {}

func (x *DeleteGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGameRequest.ProtoReflect.Descriptor instead.
func (*DeleteGameRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteGameRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetGameRequest) Reset() {
	*x = GetGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameRequest) ProtoMessage() {}

func (x *GetGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameRequest.ProtoReflect.Descriptor instead.
func (*GetGameRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{5}
}

func (x *GetGameRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *ListGamesResponse) Reset() {
	*x = ListGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGamesResponse) ProtoMessage() {}

func (x *ListGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGamesResponse.ProtoReflect.Descriptor instead.
func (*ListGamesResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{6}
}

func (x *ListGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type PatchGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game       *Game                  `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *PatchGameRequest) Reset() {
	*x = PatchGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchGameRequest) ProtoMessage() {}

func (x *PatchGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchGameRequest.ProtoReflect.Descriptor instead.
func (*PatchGameRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{7}
}

func (x *PatchGameRequest) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

func (x *PatchGameRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type SearchGamesByLeagueIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       league.LeagueID `protobuf:"varint,1,opt,name=id,proto3,enum=league.LeagueID" json:"id,omitempty"`
	Page     uint64          `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64          `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SearchGamesByLeagueIDRequest) Reset() {
	*x = SearchGamesByLeagueIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGamesByLeagueIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGamesByLeagueIDRequest) ProtoMessage() {}

func (x *SearchGamesByLeagueIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGamesByLeagueIDRequest.ProtoReflect.Descriptor instead.
func (*SearchGamesByLeagueIDRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{8}
}

func (x *SearchGamesByLeagueIDRequest) GetId() league.LeagueID {
	if x != nil {
		return x.Id
	}
	return league.LeagueID(0)
}

func (x *SearchGamesByLeagueIDRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchGamesByLeagueIDRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchGamesByLeagueIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	Total uint64  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchGamesByLeagueIDResponse) Reset() {
	*x = SearchGamesByLeagueIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchGamesByLeagueIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchGamesByLeagueIDResponse) ProtoMessage() {}

func (x *SearchGamesByLeagueIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchGamesByLeagueIDResponse.ProtoReflect.Descriptor instead.
func (*SearchGamesByLeagueIDResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{9}
}

func (x *SearchGamesByLeagueIDResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *SearchGamesByLeagueIDResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchPassedAndRegisteredGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *SearchPassedAndRegisteredGamesRequest) Reset() {
	*x = SearchPassedAndRegisteredGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPassedAndRegisteredGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPassedAndRegisteredGamesRequest) ProtoMessage() {}

func (x *SearchPassedAndRegisteredGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPassedAndRegisteredGamesRequest.ProtoReflect.Descriptor instead.
func (*SearchPassedAndRegisteredGamesRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{10}
}

func (x *SearchPassedAndRegisteredGamesRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchPassedAndRegisteredGamesRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchPassedAndRegisteredGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	Total uint64  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchPassedAndRegisteredGamesResponse) Reset() {
	*x = SearchPassedAndRegisteredGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchPassedAndRegisteredGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchPassedAndRegisteredGamesResponse) ProtoMessage() {}

func (x *SearchPassedAndRegisteredGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchPassedAndRegisteredGamesResponse.ProtoReflect.Descriptor instead.
func (*SearchPassedAndRegisteredGamesResponse) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{11}
}

func (x *SearchPassedAndRegisteredGamesResponse) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *SearchPassedAndRegisteredGamesResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RegisterGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegisterGameRequest) Reset() {
	*x = RegisterGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterGameRequest) ProtoMessage() {}

func (x *RegisterGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterGameRequest.ProtoReflect.Descriptor instead.
func (*RegisterGameRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterGameRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UnregisterGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnregisterGameRequest) Reset() {
	*x = UnregisterGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterGameRequest) ProtoMessage() {}

func (x *UnregisterGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterGameRequest.ProtoReflect.Descriptor instead.
func (*UnregisterGameRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{13}
}

func (x *UnregisterGameRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdatePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Payment Payment `protobuf:"varint,2,opt,name=payment,proto3,enum=game.Payment" json:"payment,omitempty"`
}

func (x *UpdatePaymentRequest) Reset() {
	*x = UpdatePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_game_game_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentRequest) ProtoMessage() {}

func (x *UpdatePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_game_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentRequest) Descriptor() ([]byte, []int) {
	return file_game_game_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePaymentRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePaymentRequest) GetPayment() Payment {
	if x != nil {
		return x.Payment
	}
	return Payment_PAYMENT_INVALID
}

var File_game_game_proto protoreflect.FileDescriptor

var file_game_game_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x1a, 0x13, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x2f,
	0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x05, 0x0a,
	0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x2e,
	0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x4d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x65,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61, 0x73, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x14, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x39, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x33,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x11, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x6f, 0x0a, 0x10, 0x50, 0x61, 0x74, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x04, 0x67, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x73, 0x6b, 0x22, 0x71, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x42, 0x79, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x2e, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x57, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x58,
	0x0a, 0x25, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x41, 0x6e,
	0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x60, 0x0a, 0x26, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x25, 0x0a, 0x13, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x27, 0x0a, 0x15, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2a, 0xaf, 0x01, 0x0a, 0x08,
	0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x41,
	0x53, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x48, 0x45, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x10, 0x02, 0x12, 0x1e,
	0x0a, 0x1a, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x56, 0x49,
	0x45, 0x53, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x10, 0x05, 0x12, 0x14,
	0x0a, 0x10, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53,
	0x45, 0x44, 0x10, 0x06, 0x12, 0x27, 0x0a, 0x23, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x54, 0x48, 0x45, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x4d, 0x4f, 0x56, 0x49, 0x45,
	0x53, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x10, 0x09, 0x2a, 0x5c, 0x0a,
	0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x41, 0x53, 0x48, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x45, 0x52, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41, 0x59, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x4d, 0x49, 0x58, 0x45, 0x44, 0x10, 0x03, 0x32, 0xd0, 0x04, 0x0a, 0x07,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x09, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x15, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x65, 0x61, 0x67,
	0x75, 0x65, 0x49, 0x44, 0x12, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x42, 0x79, 0x4c, 0x65, 0x61,
	0x67, 0x75, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7d, 0x0a, 0x1e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x41,
	0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50,
	0x61, 0x73, 0x73, 0x65, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x73, 0x73,
	0x65, 0x64, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xe9,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x6b, 0x69, 0x74, 0x61, 0x35,
	0x36, 0x33, 0x37, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f,
	0x67, 0x61, 0x6d, 0x65, 0x3b, 0x67, 0x61, 0x6d, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_game_game_proto_rawDescOnce sync.Once
	file_game_game_proto_rawDescData = file_game_game_proto_rawDesc
)

func file_game_game_proto_rawDescGZIP() []byte {
	file_game_game_proto_rawDescOnce.Do(func() {
		file_game_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_game_proto_rawDescData)
	})
	return file_game_game_proto_rawDescData
}

var file_game_game_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_game_game_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_game_game_proto_goTypes = []interface{}{
	(GameType)(0),                                  // 0: game.GameType
	(Payment)(0),                                   // 1: game.Payment
	(*Game)(nil),                                   // 2: game.Game
	(*BatchGetGamesRequest)(nil),                   // 3: game.BatchGetGamesRequest
	(*BatchGetGamesResponse)(nil),                  // 4: game.BatchGetGamesResponse
	(*CreateGameRequest)(nil),                      // 5: game.CreateGameRequest
	(*DeleteGameRequest)(nil),                      // 6: game.DeleteGameRequest
	(*GetGameRequest)(nil),                         // 7: game.GetGameRequest
	(*ListGamesResponse)(nil),                      // 8: game.ListGamesResponse
	(*PatchGameRequest)(nil),                       // 9: game.PatchGameRequest
	(*SearchGamesByLeagueIDRequest)(nil),           // 10: game.SearchGamesByLeagueIDRequest
	(*SearchGamesByLeagueIDResponse)(nil),          // 11: game.SearchGamesByLeagueIDResponse
	(*SearchPassedAndRegisteredGamesRequest)(nil),  // 12: game.SearchPassedAndRegisteredGamesRequest
	(*SearchPassedAndRegisteredGamesResponse)(nil), // 13: game.SearchPassedAndRegisteredGamesResponse
	(*RegisterGameRequest)(nil),                    // 14: game.RegisterGameRequest
	(*UnregisterGameRequest)(nil),                  // 15: game.UnregisterGameRequest
	(*UpdatePaymentRequest)(nil),                   // 16: game.UpdatePaymentRequest
	(*wrapperspb.Int32Value)(nil),                  // 17: google.protobuf.Int32Value
	(league.LeagueID)(0),                           // 18: league.LeagueID
	(*wrapperspb.StringValue)(nil),                 // 19: google.protobuf.StringValue
	(*timestamppb.Timestamp)(nil),                  // 20: google.protobuf.Timestamp
	(*fieldmaskpb.FieldMask)(nil),                  // 21: google.protobuf.FieldMask
	(*emptypb.Empty)(nil),                          // 22: google.protobuf.Empty
}
var file_game_game_proto_depIdxs = []int32{
	17, // 0: game.Game.external_id:type_name -> google.protobuf.Int32Value
	18, // 1: game.Game.league_id:type_name -> league.LeagueID
	0,  // 2: game.Game.type:type_name -> game.GameType
	19, // 3: game.Game.name:type_name -> google.protobuf.StringValue
	20, // 4: game.Game.date:type_name -> google.protobuf.Timestamp
	19, // 5: game.Game.payment_type:type_name -> google.protobuf.StringValue
	1,  // 6: game.Game.payment:type_name -> game.Payment
	19, // 7: game.Game.game_link:type_name -> google.protobuf.StringValue
	2,  // 8: game.BatchGetGamesResponse.games:type_name -> game.Game
	2,  // 9: game.CreateGameRequest.game:type_name -> game.Game
	2,  // 10: game.ListGamesResponse.games:type_name -> game.Game
	2,  // 11: game.PatchGameRequest.game:type_name -> game.Game
	21, // 12: game.PatchGameRequest.update_mask:type_name -> google.protobuf.FieldMask
	18, // 13: game.SearchGamesByLeagueIDRequest.id:type_name -> league.LeagueID
	2,  // 14: game.SearchGamesByLeagueIDResponse.games:type_name -> game.Game
	2,  // 15: game.SearchPassedAndRegisteredGamesResponse.games:type_name -> game.Game
	1,  // 16: game.UpdatePaymentRequest.payment:type_name -> game.Payment
	3,  // 17: game.Service.BatchGetGames:input_type -> game.BatchGetGamesRequest
	5,  // 18: game.Service.CreateGame:input_type -> game.CreateGameRequest
	6,  // 19: game.Service.DeleteGame:input_type -> game.DeleteGameRequest
	7,  // 20: game.Service.GetGame:input_type -> game.GetGameRequest
	22, // 21: game.Service.ListGames:input_type -> google.protobuf.Empty
	9,  // 22: game.Service.PatchGame:input_type -> game.PatchGameRequest
	10, // 23: game.Service.SearchGamesByLeagueID:input_type -> game.SearchGamesByLeagueIDRequest
	12, // 24: game.Service.SearchPassedAndRegisteredGames:input_type -> game.SearchPassedAndRegisteredGamesRequest
	14, // 25: game.RegistratorService.RegisterGame:input_type -> game.RegisterGameRequest
	15, // 26: game.RegistratorService.UnregisterGame:input_type -> game.UnregisterGameRequest
	16, // 27: game.RegistratorService.UpdatePayment:input_type -> game.UpdatePaymentRequest
	4,  // 28: game.Service.BatchGetGames:output_type -> game.BatchGetGamesResponse
	2,  // 29: game.Service.CreateGame:output_type -> game.Game
	22, // 30: game.Service.DeleteGame:output_type -> google.protobuf.Empty
	2,  // 31: game.Service.GetGame:output_type -> game.Game
	8,  // 32: game.Service.ListGames:output_type -> game.ListGamesResponse
	2,  // 33: game.Service.PatchGame:output_type -> game.Game
	11, // 34: game.Service.SearchGamesByLeagueID:output_type -> game.SearchGamesByLeagueIDResponse
	13, // 35: game.Service.SearchPassedAndRegisteredGames:output_type -> game.SearchPassedAndRegisteredGamesResponse
	22, // 36: game.RegistratorService.RegisterGame:output_type -> google.protobuf.Empty
	22, // 37: game.RegistratorService.UnregisterGame:output_type -> google.protobuf.Empty
	22, // 38: game.RegistratorService.UpdatePayment:output_type -> google.protobuf.Empty
	28, // [28:39] is the sub-list for method output_type
	17, // [17:28] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_game_game_proto_init() }
func file_game_game_proto_init() {
	if File_game_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_game_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchGetGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGamesByLeagueIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchGamesByLeagueIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPassedAndRegisteredGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchPassedAndRegisteredGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_game_game_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_game_game_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_game_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_game_game_proto_goTypes,
		DependencyIndexes: file_game_game_proto_depIdxs,
		EnumInfos:         file_game_game_proto_enumTypes,
		MessageInfos:      file_game_game_proto_msgTypes,
	}.Build()
	File_game_game_proto = out.File
	file_game_game_proto_rawDesc = nil
	file_game_game_proto_goTypes = nil
	file_game_game_proto_depIdxs = nil
}
