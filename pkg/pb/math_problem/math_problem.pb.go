// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: math_problem/math_problem.proto

package mathproblem

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MathProblem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GameId int32  `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Url    string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *MathProblem) Reset() {
	*x = MathProblem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_math_problem_math_problem_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MathProblem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MathProblem) ProtoMessage() {}

func (x *MathProblem) ProtoReflect() protoreflect.Message {
	mi := &file_math_problem_math_problem_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MathProblem.ProtoReflect.Descriptor instead.
func (*MathProblem) Descriptor() ([]byte, []int) {
	return file_math_problem_math_problem_proto_rawDescGZIP(), []int{0}
}

func (x *MathProblem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MathProblem) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MathProblem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CreateMathProblemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MathProblem *MathProblem `protobuf:"bytes,1,opt,name=math_problem,json=mathProblem,proto3" json:"math_problem,omitempty"`
}

func (x *CreateMathProblemRequest) Reset() {
	*x = CreateMathProblemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_math_problem_math_problem_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMathProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMathProblemRequest) ProtoMessage() {}

func (x *CreateMathProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_math_problem_math_problem_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMathProblemRequest.ProtoReflect.Descriptor instead.
func (*CreateMathProblemRequest) Descriptor() ([]byte, []int) {
	return file_math_problem_math_problem_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMathProblemRequest) GetMathProblem() *MathProblem {
	if x != nil {
		return x.MathProblem
	}
	return nil
}

type SearchMathProblemByGameIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *SearchMathProblemByGameIDRequest) Reset() {
	*x = SearchMathProblemByGameIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_math_problem_math_problem_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMathProblemByGameIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMathProblemByGameIDRequest) ProtoMessage() {}

func (x *SearchMathProblemByGameIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_math_problem_math_problem_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMathProblemByGameIDRequest.ProtoReflect.Descriptor instead.
func (*SearchMathProblemByGameIDRequest) Descriptor() ([]byte, []int) {
	return file_math_problem_math_problem_proto_rawDescGZIP(), []int{2}
}

func (x *SearchMathProblemByGameIDRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

var File_math_problem_math_problem_proto protoreflect.FileDescriptor

var file_math_problem_math_problem_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2f, 0x6d,
	0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22,
	0x48, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x58, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61,
	0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x4d, 0x61, 0x74, 0x68, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x22, 0x3b, 0x0a, 0x20, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x61, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64,
	0x32, 0xcd, 0x01, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x2e, 0x4d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x42, 0x79, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x12, 0x2e, 0x2e, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x2e, 0x4d, 0x61, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0x00,
	0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e,
	0x69, 0x6b, 0x69, 0x74, 0x61, 0x35, 0x36, 0x33, 0x37, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x3b, 0x6d, 0x61, 0x74, 0x68, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_math_problem_math_problem_proto_rawDescOnce sync.Once
	file_math_problem_math_problem_proto_rawDescData = file_math_problem_math_problem_proto_rawDesc
)

func file_math_problem_math_problem_proto_rawDescGZIP() []byte {
	file_math_problem_math_problem_proto_rawDescOnce.Do(func() {
		file_math_problem_math_problem_proto_rawDescData = protoimpl.X.CompressGZIP(file_math_problem_math_problem_proto_rawDescData)
	})
	return file_math_problem_math_problem_proto_rawDescData
}

var file_math_problem_math_problem_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_math_problem_math_problem_proto_goTypes = []interface{}{
	(*MathProblem)(nil),                      // 0: math_problem.MathProblem
	(*CreateMathProblemRequest)(nil),         // 1: math_problem.CreateMathProblemRequest
	(*SearchMathProblemByGameIDRequest)(nil), // 2: math_problem.SearchMathProblemByGameIDRequest
}
var file_math_problem_math_problem_proto_depIdxs = []int32{
	0, // 0: math_problem.CreateMathProblemRequest.math_problem:type_name -> math_problem.MathProblem
	1, // 1: math_problem.Service.CreateMathProblem:input_type -> math_problem.CreateMathProblemRequest
	2, // 2: math_problem.Service.SearchMathProblemByGameID:input_type -> math_problem.SearchMathProblemByGameIDRequest
	0, // 3: math_problem.Service.CreateMathProblem:output_type -> math_problem.MathProblem
	0, // 4: math_problem.Service.SearchMathProblemByGameID:output_type -> math_problem.MathProblem
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_math_problem_math_problem_proto_init() }
func file_math_problem_math_problem_proto_init() {
	if File_math_problem_math_problem_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_math_problem_math_problem_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MathProblem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_math_problem_math_problem_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMathProblemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_math_problem_math_problem_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMathProblemByGameIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_math_problem_math_problem_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_math_problem_math_problem_proto_goTypes,
		DependencyIndexes: file_math_problem_math_problem_proto_depIdxs,
		MessageInfos:      file_math_problem_math_problem_proto_msgTypes,
	}.Build()
	File_math_problem_math_problem_proto = out.File
	file_math_problem_math_problem_proto_rawDesc = nil
	file_math_problem_math_problem_proto_goTypes = nil
	file_math_problem_math_problem_proto_depIdxs = nil
}
