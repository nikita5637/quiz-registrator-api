// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: registrator/registrator.proto

package registrator

import (
	reflect "reflect"
	sync "sync"

	common "github.com/nikita5637/quiz-registrator-api/pkg/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterGameStatus int32

const (
	RegisterGameStatus_REGISTER_GAME_STATUS_INVALID            RegisterGameStatus = 0
	RegisterGameStatus_REGISTER_GAME_STATUS_OK                 RegisterGameStatus = 1
	RegisterGameStatus_REGISTER_GAME_STATUS_ALREADY_REGISTERED RegisterGameStatus = 2
)

// Enum value maps for RegisterGameStatus.
var (
	RegisterGameStatus_name = map[int32]string{
		0: "REGISTER_GAME_STATUS_INVALID",
		1: "REGISTER_GAME_STATUS_OK",
		2: "REGISTER_GAME_STATUS_ALREADY_REGISTERED",
	}
	RegisterGameStatus_value = map[string]int32{
		"REGISTER_GAME_STATUS_INVALID":            0,
		"REGISTER_GAME_STATUS_OK":                 1,
		"REGISTER_GAME_STATUS_ALREADY_REGISTERED": 2,
	}
)

func (x RegisterGameStatus) Enum() *RegisterGameStatus {
	p := new(RegisterGameStatus)
	*p = x
	return p
}

func (x RegisterGameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterGameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_registrator_registrator_proto_enumTypes[0].Descriptor()
}

func (RegisterGameStatus) Type() protoreflect.EnumType {
	return &file_registrator_registrator_proto_enumTypes[0]
}

func (x RegisterGameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterGameStatus.Descriptor instead.
func (RegisterGameStatus) EnumDescriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{0}
}

type PlayerType int32

const (
	PlayerType_PLAYER_TYPE_INVALID  PlayerType = 0
	PlayerType_PLAYER_TYPE_MAIN     PlayerType = 1
	PlayerType_PLAYER_TYPE_LEGIONER PlayerType = 2
)

// Enum value maps for PlayerType.
var (
	PlayerType_name = map[int32]string{
		0: "PLAYER_TYPE_INVALID",
		1: "PLAYER_TYPE_MAIN",
		2: "PLAYER_TYPE_LEGIONER",
	}
	PlayerType_value = map[string]int32{
		"PLAYER_TYPE_INVALID":  0,
		"PLAYER_TYPE_MAIN":     1,
		"PLAYER_TYPE_LEGIONER": 2,
	}
)

func (x PlayerType) Enum() *PlayerType {
	p := new(PlayerType)
	*p = x
	return p
}

func (x PlayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_registrator_registrator_proto_enumTypes[1].Descriptor()
}

func (PlayerType) Type() protoreflect.EnumType {
	return &file_registrator_registrator_proto_enumTypes[1]
}

func (x PlayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerType.Descriptor instead.
func (PlayerType) EnumDescriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{1}
}

type Degree int32

const (
	Degree_DEGREE_INVALID  Degree = 0
	Degree_DEGREE_LIKELY   Degree = 1
	Degree_DEGREE_UNLIKELY Degree = 2
)

// Enum value maps for Degree.
var (
	Degree_name = map[int32]string{
		0: "DEGREE_INVALID",
		1: "DEGREE_LIKELY",
		2: "DEGREE_UNLIKELY",
	}
	Degree_value = map[string]int32{
		"DEGREE_INVALID":  0,
		"DEGREE_LIKELY":   1,
		"DEGREE_UNLIKELY": 2,
	}
)

func (x Degree) Enum() *Degree {
	p := new(Degree)
	*p = x
	return p
}

func (x Degree) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Degree) Descriptor() protoreflect.EnumDescriptor {
	return file_registrator_registrator_proto_enumTypes[2].Descriptor()
}

func (Degree) Type() protoreflect.EnumType {
	return &file_registrator_registrator_proto_enumTypes[2]
}

func (x Degree) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Degree.Descriptor instead.
func (Degree) EnumDescriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{2}
}

type RegisterPlayerStatus int32

const (
	RegisterPlayerStatus_REGISTER_PLAYER_STATUS_INVALID            RegisterPlayerStatus = 0
	RegisterPlayerStatus_REGISTER_PLAYER_STATUS_OK                 RegisterPlayerStatus = 1
	RegisterPlayerStatus_REGISTER_PLAYER_STATUS_ALREADY_REGISTERED RegisterPlayerStatus = 2
)

// Enum value maps for RegisterPlayerStatus.
var (
	RegisterPlayerStatus_name = map[int32]string{
		0: "REGISTER_PLAYER_STATUS_INVALID",
		1: "REGISTER_PLAYER_STATUS_OK",
		2: "REGISTER_PLAYER_STATUS_ALREADY_REGISTERED",
	}
	RegisterPlayerStatus_value = map[string]int32{
		"REGISTER_PLAYER_STATUS_INVALID":            0,
		"REGISTER_PLAYER_STATUS_OK":                 1,
		"REGISTER_PLAYER_STATUS_ALREADY_REGISTERED": 2,
	}
)

func (x RegisterPlayerStatus) Enum() *RegisterPlayerStatus {
	p := new(RegisterPlayerStatus)
	*p = x
	return p
}

func (x RegisterPlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterPlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_registrator_registrator_proto_enumTypes[3].Descriptor()
}

func (RegisterPlayerStatus) Type() protoreflect.EnumType {
	return &file_registrator_registrator_proto_enumTypes[3]
}

func (x RegisterPlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RegisterPlayerStatus.Descriptor instead.
func (RegisterPlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{3}
}

type UnregisterGameStatus int32

const (
	UnregisterGameStatus_UNREGISTER_GAME_STATUS_INVALID        UnregisterGameStatus = 0
	UnregisterGameStatus_UNREGISTER_GAME_STATUS_OK             UnregisterGameStatus = 1
	UnregisterGameStatus_UNREGISTER_GAME_STATUS_NOT_REGISTERED UnregisterGameStatus = 2
)

// Enum value maps for UnregisterGameStatus.
var (
	UnregisterGameStatus_name = map[int32]string{
		0: "UNREGISTER_GAME_STATUS_INVALID",
		1: "UNREGISTER_GAME_STATUS_OK",
		2: "UNREGISTER_GAME_STATUS_NOT_REGISTERED",
	}
	UnregisterGameStatus_value = map[string]int32{
		"UNREGISTER_GAME_STATUS_INVALID":        0,
		"UNREGISTER_GAME_STATUS_OK":             1,
		"UNREGISTER_GAME_STATUS_NOT_REGISTERED": 2,
	}
)

func (x UnregisterGameStatus) Enum() *UnregisterGameStatus {
	p := new(UnregisterGameStatus)
	*p = x
	return p
}

func (x UnregisterGameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnregisterGameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_registrator_registrator_proto_enumTypes[4].Descriptor()
}

func (UnregisterGameStatus) Type() protoreflect.EnumType {
	return &file_registrator_registrator_proto_enumTypes[4]
}

func (x UnregisterGameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnregisterGameStatus.Descriptor instead.
func (UnregisterGameStatus) EnumDescriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{4}
}

type UnregisterPlayerStatus int32

const (
	UnregisterPlayerStatus_UNREGISTER_PLAYER_STATUS_INVALID        UnregisterPlayerStatus = 0
	UnregisterPlayerStatus_UNREGISTER_PLAYER_STATUS_OK             UnregisterPlayerStatus = 1
	UnregisterPlayerStatus_UNREGISTER_PLAYER_STATUS_NOT_REGISTERED UnregisterPlayerStatus = 2
)

// Enum value maps for UnregisterPlayerStatus.
var (
	UnregisterPlayerStatus_name = map[int32]string{
		0: "UNREGISTER_PLAYER_STATUS_INVALID",
		1: "UNREGISTER_PLAYER_STATUS_OK",
		2: "UNREGISTER_PLAYER_STATUS_NOT_REGISTERED",
	}
	UnregisterPlayerStatus_value = map[string]int32{
		"UNREGISTER_PLAYER_STATUS_INVALID":        0,
		"UNREGISTER_PLAYER_STATUS_OK":             1,
		"UNREGISTER_PLAYER_STATUS_NOT_REGISTERED": 2,
	}
)

func (x UnregisterPlayerStatus) Enum() *UnregisterPlayerStatus {
	p := new(UnregisterPlayerStatus)
	*p = x
	return p
}

func (x UnregisterPlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnregisterPlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_registrator_registrator_proto_enumTypes[5].Descriptor()
}

func (UnregisterPlayerStatus) Type() protoreflect.EnumType {
	return &file_registrator_registrator_proto_enumTypes[5]
}

func (x UnregisterPlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnregisterPlayerStatus.Descriptor instead.
func (UnregisterPlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{5}
}

type Place struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Address   string  `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Name      string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ShortName string  `protobuf:"bytes,4,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	Latitude  float32 `protobuf:"fixed32,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,6,opt,name=longitude,proto3" json:"longitude,omitempty"`
	MenuLink  string  `protobuf:"bytes,7,opt,name=menu_link,json=menuLink,proto3" json:"menu_link,omitempty"`
}

func (x *Place) Reset() {
	*x = Place{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Place) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Place) ProtoMessage() {}

func (x *Place) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Place.ProtoReflect.Descriptor instead.
func (*Place) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{0}
}

func (x *Place) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Place) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Place) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Place) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Place) GetLatitude() float32 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Place) GetLongitude() float32 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *Place) GetMenuLink() string {
	if x != nil {
		return x.MenuLink
	}
	return ""
}

type AddGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId  int32                  `protobuf:"varint,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	LeagueId    int32                  `protobuf:"varint,2,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
	Type        common.GameType        `protobuf:"varint,3,opt,name=type,proto3,enum=common.GameType" json:"type,omitempty"`
	Number      string                 `protobuf:"bytes,4,opt,name=number,proto3" json:"number,omitempty"`
	Name        string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	PlaceId     int32                  `protobuf:"varint,6,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
	Date        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	Price       uint32                 `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	PaymentType string                 `protobuf:"bytes,9,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	MaxPlayers  uint32                 `protobuf:"varint,10,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
}

func (x *AddGameRequest) Reset() {
	*x = AddGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameRequest) ProtoMessage() {}

func (x *AddGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameRequest.ProtoReflect.Descriptor instead.
func (*AddGameRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{1}
}

func (x *AddGameRequest) GetExternalId() int32 {
	if x != nil {
		return x.ExternalId
	}
	return 0
}

func (x *AddGameRequest) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *AddGameRequest) GetType() common.GameType {
	if x != nil {
		return x.Type
	}
	return common.GameType(0)
}

func (x *AddGameRequest) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *AddGameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddGameRequest) GetPlaceId() int32 {
	if x != nil {
		return x.PlaceId
	}
	return 0
}

func (x *AddGameRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AddGameRequest) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddGameRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *AddGameRequest) GetMaxPlayers() uint32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

type AddGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddGameResponse) Reset() {
	*x = AddGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGameResponse) ProtoMessage() {}

func (x *AddGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGameResponse.ProtoReflect.Descriptor instead.
func (*AddGameResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{2}
}

func (x *AddGameResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AddGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*AddGamesRequest_Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *AddGamesRequest) Reset() {
	*x = AddGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGamesRequest) ProtoMessage() {}

func (x *AddGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGamesRequest.ProtoReflect.Descriptor instead.
func (*AddGamesRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{3}
}

func (x *AddGamesRequest) GetGames() []*AddGamesRequest_Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type AddGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddGamesResponse) Reset() {
	*x = AddGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGamesResponse) ProtoMessage() {}

func (x *AddGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGamesResponse.ProtoReflect.Descriptor instead.
func (*AddGamesResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{4}
}

type DeleteGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteGameRequest) Reset() {
	*x = DeleteGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGameRequest) ProtoMessage() {}

func (x *DeleteGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGameRequest.ProtoReflect.Descriptor instead.
func (*DeleteGameRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteGameRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGameResponse) Reset() {
	*x = DeleteGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGameResponse) ProtoMessage() {}

func (x *DeleteGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGameResponse.ProtoReflect.Descriptor instead.
func (*DeleteGameResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{6}
}

type GetGameByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GetGameByIDRequest) Reset() {
	*x = GetGameByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameByIDRequest) ProtoMessage() {}

func (x *GetGameByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameByIDRequest.ProtoReflect.Descriptor instead.
func (*GetGameByIDRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{7}
}

func (x *GetGameByIDRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type GetGameByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Game *common.Game `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
}

func (x *GetGameByIDResponse) Reset() {
	*x = GetGameByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameByIDResponse) ProtoMessage() {}

func (x *GetGameByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameByIDResponse.ProtoReflect.Descriptor instead.
func (*GetGameByIDResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{8}
}

func (x *GetGameByIDResponse) GetGame() *common.Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type GetGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active bool `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *GetGamesRequest) Reset() {
	*x = GetGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesRequest) ProtoMessage() {}

func (x *GetGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesRequest.ProtoReflect.Descriptor instead.
func (*GetGamesRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{9}
}

func (x *GetGamesRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type GetGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*common.Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *GetGamesResponse) Reset() {
	*x = GetGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesResponse) ProtoMessage() {}

func (x *GetGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesResponse.ProtoReflect.Descriptor instead.
func (*GetGamesResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{10}
}

func (x *GetGamesResponse) GetGames() []*common.Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type GetPlaceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetPlaceByIDRequest) Reset() {
	*x = GetPlaceByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceByIDRequest) ProtoMessage() {}

func (x *GetPlaceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceByIDRequest.ProtoReflect.Descriptor instead.
func (*GetPlaceByIDRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlaceByIDRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPlaceByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place *Place `protobuf:"bytes,1,opt,name=place,proto3" json:"place,omitempty"`
}

func (x *GetPlaceByIDResponse) Reset() {
	*x = GetPlaceByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaceByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceByIDResponse) ProtoMessage() {}

func (x *GetPlaceByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPlaceByIDResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{12}
}

func (x *GetPlaceByIDResponse) GetPlace() *Place {
	if x != nil {
		return x.Place
	}
	return nil
}

type GetPlaceByNameAndAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetPlaceByNameAndAddressRequest) Reset() {
	*x = GetPlaceByNameAndAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaceByNameAndAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceByNameAndAddressRequest) ProtoMessage() {}

func (x *GetPlaceByNameAndAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceByNameAndAddressRequest.ProtoReflect.Descriptor instead.
func (*GetPlaceByNameAndAddressRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{13}
}

func (x *GetPlaceByNameAndAddressRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetPlaceByNameAndAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetPlaceByNameAndAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Place *Place `protobuf:"bytes,1,opt,name=place,proto3" json:"place,omitempty"`
}

func (x *GetPlaceByNameAndAddressResponse) Reset() {
	*x = GetPlaceByNameAndAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlaceByNameAndAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlaceByNameAndAddressResponse) ProtoMessage() {}

func (x *GetPlaceByNameAndAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlaceByNameAndAddressResponse.ProtoReflect.Descriptor instead.
func (*GetPlaceByNameAndAddressResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{14}
}

func (x *GetPlaceByNameAndAddressResponse) GetPlace() *Place {
	if x != nil {
		return x.Place
	}
	return nil
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int32  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RegisteredBy int32  `protobuf:"varint,2,opt,name=registered_by,json=registeredBy,proto3" json:"registered_by,omitempty"`
	Degree       Degree `protobuf:"varint,3,opt,name=degree,proto3,enum=registrator.Degree" json:"degree,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{15}
}

func (x *Player) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Player) GetRegisteredBy() int32 {
	if x != nil {
		return x.RegisteredBy
	}
	return 0
}

func (x *Player) GetDegree() Degree {
	if x != nil {
		return x.Degree
	}
	return Degree_DEGREE_INVALID
}

type GetPlayersByGameIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GetPlayersByGameIDRequest) Reset() {
	*x = GetPlayersByGameIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayersByGameIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayersByGameIDRequest) ProtoMessage() {}

func (x *GetPlayersByGameIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayersByGameIDRequest.ProtoReflect.Descriptor instead.
func (*GetPlayersByGameIDRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{16}
}

func (x *GetPlayersByGameIDRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type GetPlayersByGameIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *GetPlayersByGameIDResponse) Reset() {
	*x = GetPlayersByGameIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPlayersByGameIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayersByGameIDResponse) ProtoMessage() {}

func (x *GetPlayersByGameIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayersByGameIDResponse.ProtoReflect.Descriptor instead.
func (*GetPlayersByGameIDResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{17}
}

func (x *GetPlayersByGameIDResponse) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type GetRegisteredGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active bool `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *GetRegisteredGamesRequest) Reset() {
	*x = GetRegisteredGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredGamesRequest) ProtoMessage() {}

func (x *GetRegisteredGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredGamesRequest.ProtoReflect.Descriptor instead.
func (*GetRegisteredGamesRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{18}
}

func (x *GetRegisteredGamesRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type GetRegisteredGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*common.Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *GetRegisteredGamesResponse) Reset() {
	*x = GetRegisteredGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredGamesResponse) ProtoMessage() {}

func (x *GetRegisteredGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredGamesResponse.ProtoReflect.Descriptor instead.
func (*GetRegisteredGamesResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{19}
}

func (x *GetRegisteredGamesResponse) GetGames() []*common.Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type GetUserGamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active bool  `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	UserId int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserGamesRequest) Reset() {
	*x = GetUserGamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGamesRequest) ProtoMessage() {}

func (x *GetUserGamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGamesRequest.ProtoReflect.Descriptor instead.
func (*GetUserGamesRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{20}
}

func (x *GetUserGamesRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *GetUserGamesRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserGamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*common.Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
}

func (x *GetUserGamesResponse) Reset() {
	*x = GetUserGamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserGamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserGamesResponse) ProtoMessage() {}

func (x *GetUserGamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserGamesResponse.ProtoReflect.Descriptor instead.
func (*GetUserGamesResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{21}
}

func (x *GetUserGamesResponse) GetGames() []*common.Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type RegisterGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *RegisterGameRequest) Reset() {
	*x = RegisterGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterGameRequest) ProtoMessage() {}

func (x *RegisterGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterGameRequest.ProtoReflect.Descriptor instead.
func (*RegisterGameRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{22}
}

func (x *RegisterGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type RegisterGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RegisterGameStatus `protobuf:"varint,1,opt,name=status,proto3,enum=registrator.RegisterGameStatus" json:"status,omitempty"`
}

func (x *RegisterGameResponse) Reset() {
	*x = RegisterGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterGameResponse) ProtoMessage() {}

func (x *RegisterGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterGameResponse.ProtoReflect.Descriptor instead.
func (*RegisterGameResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{23}
}

func (x *RegisterGameResponse) GetStatus() RegisterGameStatus {
	if x != nil {
		return x.Status
	}
	return RegisterGameStatus_REGISTER_GAME_STATUS_INVALID
}

type RegisterPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId     int32      `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerType PlayerType `protobuf:"varint,2,opt,name=player_type,json=playerType,proto3,enum=registrator.PlayerType" json:"player_type,omitempty"`
	Degree     Degree     `protobuf:"varint,3,opt,name=degree,proto3,enum=registrator.Degree" json:"degree,omitempty"`
}

func (x *RegisterPlayerRequest) Reset() {
	*x = RegisterPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPlayerRequest) ProtoMessage() {}

func (x *RegisterPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPlayerRequest.ProtoReflect.Descriptor instead.
func (*RegisterPlayerRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{24}
}

func (x *RegisterPlayerRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *RegisterPlayerRequest) GetPlayerType() PlayerType {
	if x != nil {
		return x.PlayerType
	}
	return PlayerType_PLAYER_TYPE_INVALID
}

func (x *RegisterPlayerRequest) GetDegree() Degree {
	if x != nil {
		return x.Degree
	}
	return Degree_DEGREE_INVALID
}

type RegisterPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status RegisterPlayerStatus `protobuf:"varint,1,opt,name=status,proto3,enum=registrator.RegisterPlayerStatus" json:"status,omitempty"`
}

func (x *RegisterPlayerResponse) Reset() {
	*x = RegisterPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterPlayerResponse) ProtoMessage() {}

func (x *RegisterPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterPlayerResponse.ProtoReflect.Descriptor instead.
func (*RegisterPlayerResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{25}
}

func (x *RegisterPlayerResponse) GetStatus() RegisterPlayerStatus {
	if x != nil {
		return x.Status
	}
	return RegisterPlayerStatus_REGISTER_PLAYER_STATUS_INVALID
}

type UnregisterGameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *UnregisterGameRequest) Reset() {
	*x = UnregisterGameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterGameRequest) ProtoMessage() {}

func (x *UnregisterGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterGameRequest.ProtoReflect.Descriptor instead.
func (*UnregisterGameRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{26}
}

func (x *UnregisterGameRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type UnregisterGameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UnregisterGameStatus `protobuf:"varint,1,opt,name=status,proto3,enum=registrator.UnregisterGameStatus" json:"status,omitempty"`
}

func (x *UnregisterGameResponse) Reset() {
	*x = UnregisterGameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterGameResponse) ProtoMessage() {}

func (x *UnregisterGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterGameResponse.ProtoReflect.Descriptor instead.
func (*UnregisterGameResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{27}
}

func (x *UnregisterGameResponse) GetStatus() UnregisterGameStatus {
	if x != nil {
		return x.Status
	}
	return UnregisterGameStatus_UNREGISTER_GAME_STATUS_INVALID
}

type UnregisterPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId     int32      `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerType PlayerType `protobuf:"varint,2,opt,name=player_type,json=playerType,proto3,enum=registrator.PlayerType" json:"player_type,omitempty"`
}

func (x *UnregisterPlayerRequest) Reset() {
	*x = UnregisterPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterPlayerRequest) ProtoMessage() {}

func (x *UnregisterPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterPlayerRequest.ProtoReflect.Descriptor instead.
func (*UnregisterPlayerRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{28}
}

func (x *UnregisterPlayerRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *UnregisterPlayerRequest) GetPlayerType() PlayerType {
	if x != nil {
		return x.PlayerType
	}
	return PlayerType_PLAYER_TYPE_INVALID
}

type UnregisterPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status UnregisterPlayerStatus `protobuf:"varint,1,opt,name=status,proto3,enum=registrator.UnregisterPlayerStatus" json:"status,omitempty"`
}

func (x *UnregisterPlayerResponse) Reset() {
	*x = UnregisterPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterPlayerResponse) ProtoMessage() {}

func (x *UnregisterPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterPlayerResponse.ProtoReflect.Descriptor instead.
func (*UnregisterPlayerResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{29}
}

func (x *UnregisterPlayerResponse) GetStatus() UnregisterPlayerStatus {
	if x != nil {
		return x.Status
	}
	return UnregisterPlayerStatus_UNREGISTER_PLAYER_STATUS_INVALID
}

type UpdatePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId  int32          `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Payment common.Payment `protobuf:"varint,2,opt,name=payment,proto3,enum=common.Payment" json:"payment,omitempty"`
}

func (x *UpdatePaymentRequest) Reset() {
	*x = UpdatePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentRequest) ProtoMessage() {}

func (x *UpdatePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentRequest.ProtoReflect.Descriptor instead.
func (*UpdatePaymentRequest) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{30}
}

func (x *UpdatePaymentRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *UpdatePaymentRequest) GetPayment() common.Payment {
	if x != nil {
		return x.Payment
	}
	return common.Payment(0)
}

type UpdatePaymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePaymentResponse) Reset() {
	*x = UpdatePaymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePaymentResponse) ProtoMessage() {}

func (x *UpdatePaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePaymentResponse.ProtoReflect.Descriptor instead.
func (*UpdatePaymentResponse) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{31}
}

type AddGamesRequest_Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId  int32                  `protobuf:"varint,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	LeagueId    int32                  `protobuf:"varint,2,opt,name=league_id,json=leagueId,proto3" json:"league_id,omitempty"`
	Type        common.GameType        `protobuf:"varint,3,opt,name=type,proto3,enum=common.GameType" json:"type,omitempty"`
	Number      string                 `protobuf:"bytes,4,opt,name=number,proto3" json:"number,omitempty"`
	Name        string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	PlaceId     int32                  `protobuf:"varint,6,opt,name=place_id,json=placeId,proto3" json:"place_id,omitempty"`
	Date        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	Price       uint32                 `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	PaymentType string                 `protobuf:"bytes,9,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	MaxPlayers  uint32                 `protobuf:"varint,10,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
}

func (x *AddGamesRequest_Game) Reset() {
	*x = AddGamesRequest_Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_registrator_registrator_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGamesRequest_Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGamesRequest_Game) ProtoMessage() {}

func (x *AddGamesRequest_Game) ProtoReflect() protoreflect.Message {
	mi := &file_registrator_registrator_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGamesRequest_Game.ProtoReflect.Descriptor instead.
func (*AddGamesRequest_Game) Descriptor() ([]byte, []int) {
	return file_registrator_registrator_proto_rawDescGZIP(), []int{3, 0}
}

func (x *AddGamesRequest_Game) GetExternalId() int32 {
	if x != nil {
		return x.ExternalId
	}
	return 0
}

func (x *AddGamesRequest_Game) GetLeagueId() int32 {
	if x != nil {
		return x.LeagueId
	}
	return 0
}

func (x *AddGamesRequest_Game) GetType() common.GameType {
	if x != nil {
		return x.Type
	}
	return common.GameType(0)
}

func (x *AddGamesRequest_Game) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *AddGamesRequest_Game) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddGamesRequest_Game) GetPlaceId() int32 {
	if x != nil {
		return x.PlaceId
	}
	return 0
}

func (x *AddGamesRequest_Game) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *AddGamesRequest_Game) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddGamesRequest_Game) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *AddGamesRequest_Game) GetMaxPlayers() uint32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

var File_registrator_registrator_proto protoreflect.FileDescriptor

var file_registrator_registrator_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xbb, 0x01, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x6e, 0x6b,
	0x22, 0xc5, 0x02, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61,
	0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x21, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x1a, 0xbb, 0x02, 0x0a, 0x04, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x61, 0x67, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61,
	0x6d, 0x65, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x67,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x29, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x36, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05,
	0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x22, 0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x28, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x1f, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x4c, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x22, 0x73, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44,
	0x65, 0x67, 0x72, 0x65, 0x65, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x22, 0x34, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x22, 0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x40, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x3a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x2e, 0x0a, 0x13, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x14, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x97, 0x01, 0x0a,
	0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x67,
	0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x52, 0x06,
	0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x22, 0x53, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x21, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x53, 0x0a,
	0x16, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x6c, 0x0a, 0x17, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x57, 0x0a, 0x18, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x80,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4f, 0x4b, 0x10, 0x01, 0x12, 0x2b, 0x0a, 0x27, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x4c, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10,
	0x02, 0x2a, 0x55, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x45,
	0x47, 0x49, 0x4f, 0x4e, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x44, 0x0a, 0x06, 0x44, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x47, 0x52, 0x45, 0x45, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x47, 0x52, 0x45, 0x45,
	0x5f, 0x4c, 0x49, 0x4b, 0x45, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45, 0x47,
	0x52, 0x45, 0x45, 0x5f, 0x55, 0x4e, 0x4c, 0x49, 0x4b, 0x45, 0x4c, 0x59, 0x10, 0x02, 0x2a, 0x88,
	0x01, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x52,
	0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x2d, 0x0a, 0x29, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x52, 0x45, 0x47,
	0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x84, 0x01, 0x0a, 0x14, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x55, 0x4e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x4e, 0x52, 0x45, 0x47, 0x49,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x29, 0x0a, 0x25, 0x55, 0x4e, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02,
	0x2a, 0x8c, 0x01, 0x0a, 0x16, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x20, 0x55,
	0x4e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x4e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x5f,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x4b,
	0x10, 0x01, 0x12, 0x2b, 0x0a, 0x27, 0x55, 0x4e, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x45, 0x44, 0x10, 0x02, 0x32,
	0xe0, 0x0a, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x08, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1f, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6e, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x20, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x47, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x22, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x4b, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6e, 0x69, 0x6b, 0x69, 0x74, 0x61, 0x35, 0x36, 0x33, 0x37, 0x2f, 0x71, 0x75, 0x69, 0x7a,
	0x2d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x3b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_registrator_registrator_proto_rawDescOnce sync.Once
	file_registrator_registrator_proto_rawDescData = file_registrator_registrator_proto_rawDesc
)

func file_registrator_registrator_proto_rawDescGZIP() []byte {
	file_registrator_registrator_proto_rawDescOnce.Do(func() {
		file_registrator_registrator_proto_rawDescData = protoimpl.X.CompressGZIP(file_registrator_registrator_proto_rawDescData)
	})
	return file_registrator_registrator_proto_rawDescData
}

var file_registrator_registrator_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_registrator_registrator_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_registrator_registrator_proto_goTypes = []interface{}{
	(RegisterGameStatus)(0),                  // 0: registrator.RegisterGameStatus
	(PlayerType)(0),                          // 1: registrator.PlayerType
	(Degree)(0),                              // 2: registrator.Degree
	(RegisterPlayerStatus)(0),                // 3: registrator.RegisterPlayerStatus
	(UnregisterGameStatus)(0),                // 4: registrator.UnregisterGameStatus
	(UnregisterPlayerStatus)(0),              // 5: registrator.UnregisterPlayerStatus
	(*Place)(nil),                            // 6: registrator.Place
	(*AddGameRequest)(nil),                   // 7: registrator.AddGameRequest
	(*AddGameResponse)(nil),                  // 8: registrator.AddGameResponse
	(*AddGamesRequest)(nil),                  // 9: registrator.AddGamesRequest
	(*AddGamesResponse)(nil),                 // 10: registrator.AddGamesResponse
	(*DeleteGameRequest)(nil),                // 11: registrator.DeleteGameRequest
	(*DeleteGameResponse)(nil),               // 12: registrator.DeleteGameResponse
	(*GetGameByIDRequest)(nil),               // 13: registrator.GetGameByIDRequest
	(*GetGameByIDResponse)(nil),              // 14: registrator.GetGameByIDResponse
	(*GetGamesRequest)(nil),                  // 15: registrator.GetGamesRequest
	(*GetGamesResponse)(nil),                 // 16: registrator.GetGamesResponse
	(*GetPlaceByIDRequest)(nil),              // 17: registrator.GetPlaceByIDRequest
	(*GetPlaceByIDResponse)(nil),             // 18: registrator.GetPlaceByIDResponse
	(*GetPlaceByNameAndAddressRequest)(nil),  // 19: registrator.GetPlaceByNameAndAddressRequest
	(*GetPlaceByNameAndAddressResponse)(nil), // 20: registrator.GetPlaceByNameAndAddressResponse
	(*Player)(nil),                           // 21: registrator.Player
	(*GetPlayersByGameIDRequest)(nil),        // 22: registrator.GetPlayersByGameIDRequest
	(*GetPlayersByGameIDResponse)(nil),       // 23: registrator.GetPlayersByGameIDResponse
	(*GetRegisteredGamesRequest)(nil),        // 24: registrator.GetRegisteredGamesRequest
	(*GetRegisteredGamesResponse)(nil),       // 25: registrator.GetRegisteredGamesResponse
	(*GetUserGamesRequest)(nil),              // 26: registrator.GetUserGamesRequest
	(*GetUserGamesResponse)(nil),             // 27: registrator.GetUserGamesResponse
	(*RegisterGameRequest)(nil),              // 28: registrator.RegisterGameRequest
	(*RegisterGameResponse)(nil),             // 29: registrator.RegisterGameResponse
	(*RegisterPlayerRequest)(nil),            // 30: registrator.RegisterPlayerRequest
	(*RegisterPlayerResponse)(nil),           // 31: registrator.RegisterPlayerResponse
	(*UnregisterGameRequest)(nil),            // 32: registrator.UnregisterGameRequest
	(*UnregisterGameResponse)(nil),           // 33: registrator.UnregisterGameResponse
	(*UnregisterPlayerRequest)(nil),          // 34: registrator.UnregisterPlayerRequest
	(*UnregisterPlayerResponse)(nil),         // 35: registrator.UnregisterPlayerResponse
	(*UpdatePaymentRequest)(nil),             // 36: registrator.UpdatePaymentRequest
	(*UpdatePaymentResponse)(nil),            // 37: registrator.UpdatePaymentResponse
	(*AddGamesRequest_Game)(nil),             // 38: registrator.AddGamesRequest.Game
	(common.GameType)(0),                     // 39: common.GameType
	(*timestamppb.Timestamp)(nil),            // 40: google.protobuf.Timestamp
	(*common.Game)(nil),                      // 41: common.Game
	(common.Payment)(0),                      // 42: common.Payment
}
var file_registrator_registrator_proto_depIdxs = []int32{
	39, // 0: registrator.AddGameRequest.type:type_name -> common.GameType
	40, // 1: registrator.AddGameRequest.date:type_name -> google.protobuf.Timestamp
	38, // 2: registrator.AddGamesRequest.games:type_name -> registrator.AddGamesRequest.Game
	41, // 3: registrator.GetGameByIDResponse.game:type_name -> common.Game
	41, // 4: registrator.GetGamesResponse.games:type_name -> common.Game
	6,  // 5: registrator.GetPlaceByIDResponse.place:type_name -> registrator.Place
	6,  // 6: registrator.GetPlaceByNameAndAddressResponse.place:type_name -> registrator.Place
	2,  // 7: registrator.Player.degree:type_name -> registrator.Degree
	21, // 8: registrator.GetPlayersByGameIDResponse.players:type_name -> registrator.Player
	41, // 9: registrator.GetRegisteredGamesResponse.games:type_name -> common.Game
	41, // 10: registrator.GetUserGamesResponse.games:type_name -> common.Game
	0,  // 11: registrator.RegisterGameResponse.status:type_name -> registrator.RegisterGameStatus
	1,  // 12: registrator.RegisterPlayerRequest.player_type:type_name -> registrator.PlayerType
	2,  // 13: registrator.RegisterPlayerRequest.degree:type_name -> registrator.Degree
	3,  // 14: registrator.RegisterPlayerResponse.status:type_name -> registrator.RegisterPlayerStatus
	4,  // 15: registrator.UnregisterGameResponse.status:type_name -> registrator.UnregisterGameStatus
	1,  // 16: registrator.UnregisterPlayerRequest.player_type:type_name -> registrator.PlayerType
	5,  // 17: registrator.UnregisterPlayerResponse.status:type_name -> registrator.UnregisterPlayerStatus
	42, // 18: registrator.UpdatePaymentRequest.payment:type_name -> common.Payment
	39, // 19: registrator.AddGamesRequest.Game.type:type_name -> common.GameType
	40, // 20: registrator.AddGamesRequest.Game.date:type_name -> google.protobuf.Timestamp
	7,  // 21: registrator.RegistratorService.AddGame:input_type -> registrator.AddGameRequest
	9,  // 22: registrator.RegistratorService.AddGames:input_type -> registrator.AddGamesRequest
	11, // 23: registrator.RegistratorService.DeleteGame:input_type -> registrator.DeleteGameRequest
	13, // 24: registrator.RegistratorService.GetGameByID:input_type -> registrator.GetGameByIDRequest
	15, // 25: registrator.RegistratorService.GetGames:input_type -> registrator.GetGamesRequest
	17, // 26: registrator.RegistratorService.GetPlaceByID:input_type -> registrator.GetPlaceByIDRequest
	19, // 27: registrator.RegistratorService.GetPlaceByNameAndAddress:input_type -> registrator.GetPlaceByNameAndAddressRequest
	22, // 28: registrator.RegistratorService.GetPlayersByGameID:input_type -> registrator.GetPlayersByGameIDRequest
	24, // 29: registrator.RegistratorService.GetRegisteredGames:input_type -> registrator.GetRegisteredGamesRequest
	26, // 30: registrator.RegistratorService.GetUserGames:input_type -> registrator.GetUserGamesRequest
	28, // 31: registrator.RegistratorService.RegisterGame:input_type -> registrator.RegisterGameRequest
	30, // 32: registrator.RegistratorService.RegisterPlayer:input_type -> registrator.RegisterPlayerRequest
	32, // 33: registrator.RegistratorService.UnregisterGame:input_type -> registrator.UnregisterGameRequest
	34, // 34: registrator.RegistratorService.UnregisterPlayer:input_type -> registrator.UnregisterPlayerRequest
	36, // 35: registrator.RegistratorService.UpdatePayment:input_type -> registrator.UpdatePaymentRequest
	8,  // 36: registrator.RegistratorService.AddGame:output_type -> registrator.AddGameResponse
	10, // 37: registrator.RegistratorService.AddGames:output_type -> registrator.AddGamesResponse
	12, // 38: registrator.RegistratorService.DeleteGame:output_type -> registrator.DeleteGameResponse
	14, // 39: registrator.RegistratorService.GetGameByID:output_type -> registrator.GetGameByIDResponse
	16, // 40: registrator.RegistratorService.GetGames:output_type -> registrator.GetGamesResponse
	18, // 41: registrator.RegistratorService.GetPlaceByID:output_type -> registrator.GetPlaceByIDResponse
	20, // 42: registrator.RegistratorService.GetPlaceByNameAndAddress:output_type -> registrator.GetPlaceByNameAndAddressResponse
	23, // 43: registrator.RegistratorService.GetPlayersByGameID:output_type -> registrator.GetPlayersByGameIDResponse
	25, // 44: registrator.RegistratorService.GetRegisteredGames:output_type -> registrator.GetRegisteredGamesResponse
	27, // 45: registrator.RegistratorService.GetUserGames:output_type -> registrator.GetUserGamesResponse
	29, // 46: registrator.RegistratorService.RegisterGame:output_type -> registrator.RegisterGameResponse
	31, // 47: registrator.RegistratorService.RegisterPlayer:output_type -> registrator.RegisterPlayerResponse
	33, // 48: registrator.RegistratorService.UnregisterGame:output_type -> registrator.UnregisterGameResponse
	35, // 49: registrator.RegistratorService.UnregisterPlayer:output_type -> registrator.UnregisterPlayerResponse
	37, // 50: registrator.RegistratorService.UpdatePayment:output_type -> registrator.UpdatePaymentResponse
	36, // [36:51] is the sub-list for method output_type
	21, // [21:36] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_registrator_registrator_proto_init() }
func file_registrator_registrator_proto_init() {
	if File_registrator_registrator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_registrator_registrator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Place); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaceByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaceByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaceByNameAndAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlaceByNameAndAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayersByGameIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPlayersByGameIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserGamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterGameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterGameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePaymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_registrator_registrator_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGamesRequest_Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_registrator_registrator_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registrator_registrator_proto_goTypes,
		DependencyIndexes: file_registrator_registrator_proto_depIdxs,
		EnumInfos:         file_registrator_registrator_proto_enumTypes,
		MessageInfos:      file_registrator_registrator_proto_msgTypes,
	}.Build()
	File_registrator_registrator_proto = out.File
	file_registrator_registrator_proto_rawDesc = nil
	file_registrator_registrator_proto_goTypes = nil
	file_registrator_registrator_proto_depIdxs = nil
}
