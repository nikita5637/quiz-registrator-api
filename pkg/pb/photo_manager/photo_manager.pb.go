// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: photo_manager/photo_manager.proto

package photomanager

import (
	reflect "reflect"
	sync "sync"

	common "github.com/nikita5637/quiz-registrator-api/pkg/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddGamePhotosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32    `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Urls   []string `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *AddGamePhotosRequest) Reset() {
	*x = AddGamePhotosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_manager_photo_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGamePhotosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGamePhotosRequest) ProtoMessage() {}

func (x *AddGamePhotosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_manager_photo_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGamePhotosRequest.ProtoReflect.Descriptor instead.
func (*AddGamePhotosRequest) Descriptor() ([]byte, []int) {
	return file_photo_manager_photo_manager_proto_rawDescGZIP(), []int{0}
}

func (x *AddGamePhotosRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *AddGamePhotosRequest) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type GetGamesWithPhotosRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetGamesWithPhotosRequest) Reset() {
	*x = GetGamesWithPhotosRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_manager_photo_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGamesWithPhotosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesWithPhotosRequest) ProtoMessage() {}

func (x *GetGamesWithPhotosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_manager_photo_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesWithPhotosRequest.ProtoReflect.Descriptor instead.
func (*GetGamesWithPhotosRequest) Descriptor() ([]byte, []int) {
	return file_photo_manager_photo_manager_proto_rawDescGZIP(), []int{1}
}

func (x *GetGamesWithPhotosRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetGamesWithPhotosRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetGamesWithPhotosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*common.Game `protobuf:"bytes,1,rep,name=games,proto3" json:"games,omitempty"`
	Total uint32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetGamesWithPhotosResponse) Reset() {
	*x = GetGamesWithPhotosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_manager_photo_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGamesWithPhotosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamesWithPhotosResponse) ProtoMessage() {}

func (x *GetGamesWithPhotosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_manager_photo_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamesWithPhotosResponse.ProtoReflect.Descriptor instead.
func (*GetGamesWithPhotosResponse) Descriptor() ([]byte, []int) {
	return file_photo_manager_photo_manager_proto_rawDescGZIP(), []int{2}
}

func (x *GetGamesWithPhotosResponse) GetGames() []*common.Game {
	if x != nil {
		return x.Games
	}
	return nil
}

func (x *GetGamesWithPhotosResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetPhotosByGameIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId int32 `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
}

func (x *GetPhotosByGameIDRequest) Reset() {
	*x = GetPhotosByGameIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_manager_photo_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhotosByGameIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhotosByGameIDRequest) ProtoMessage() {}

func (x *GetPhotosByGameIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_photo_manager_photo_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhotosByGameIDRequest.ProtoReflect.Descriptor instead.
func (*GetPhotosByGameIDRequest) Descriptor() ([]byte, []int) {
	return file_photo_manager_photo_manager_proto_rawDescGZIP(), []int{3}
}

func (x *GetPhotosByGameIDRequest) GetGameId() int32 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type GetPhotosByGameIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *GetPhotosByGameIDResponse) Reset() {
	*x = GetPhotosByGameIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_photo_manager_photo_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhotosByGameIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhotosByGameIDResponse) ProtoMessage() {}

func (x *GetPhotosByGameIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_photo_manager_photo_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhotosByGameIDResponse.ProtoReflect.Descriptor instead.
func (*GetPhotosByGameIDResponse) Descriptor() ([]byte, []int) {
	return file_photo_manager_photo_manager_proto_rawDescGZIP(), []int{4}
}

func (x *GetPhotosByGameIDResponse) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

var File_photo_manager_photo_manager_proto protoreflect.FileDescriptor

var file_photo_manager_photo_manager_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x43, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x49, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x22, 0x56, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52,
	0x05, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x33, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79,
	0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72,
	0x6c, 0x73, 0x32, 0xb0, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12,
	0x23, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6b,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x12, 0x28, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44,
	0x12, 0x27, 0x2e, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x42, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x4e, 0x5a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x6b, 0x69, 0x74, 0x61, 0x35, 0x36, 0x33, 0x37, 0x2f, 0x71,
	0x75, 0x69, 0x7a, 0x2d, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x3b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_photo_manager_photo_manager_proto_rawDescOnce sync.Once
	file_photo_manager_photo_manager_proto_rawDescData = file_photo_manager_photo_manager_proto_rawDesc
)

func file_photo_manager_photo_manager_proto_rawDescGZIP() []byte {
	file_photo_manager_photo_manager_proto_rawDescOnce.Do(func() {
		file_photo_manager_photo_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_photo_manager_photo_manager_proto_rawDescData)
	})
	return file_photo_manager_photo_manager_proto_rawDescData
}

var file_photo_manager_photo_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_photo_manager_photo_manager_proto_goTypes = []interface{}{
	(*AddGamePhotosRequest)(nil),       // 0: photo_manager.AddGamePhotosRequest
	(*GetGamesWithPhotosRequest)(nil),  // 1: photo_manager.GetGamesWithPhotosRequest
	(*GetGamesWithPhotosResponse)(nil), // 2: photo_manager.GetGamesWithPhotosResponse
	(*GetPhotosByGameIDRequest)(nil),   // 3: photo_manager.GetPhotosByGameIDRequest
	(*GetPhotosByGameIDResponse)(nil),  // 4: photo_manager.GetPhotosByGameIDResponse
	(*common.Game)(nil),                // 5: common.Game
	(*emptypb.Empty)(nil),              // 6: google.protobuf.Empty
}
var file_photo_manager_photo_manager_proto_depIdxs = []int32{
	5, // 0: photo_manager.GetGamesWithPhotosResponse.games:type_name -> common.Game
	0, // 1: photo_manager.Service.AddGamePhotos:input_type -> photo_manager.AddGamePhotosRequest
	1, // 2: photo_manager.Service.GetGamesWithPhotos:input_type -> photo_manager.GetGamesWithPhotosRequest
	3, // 3: photo_manager.Service.GetPhotosByGameID:input_type -> photo_manager.GetPhotosByGameIDRequest
	6, // 4: photo_manager.Service.AddGamePhotos:output_type -> google.protobuf.Empty
	2, // 5: photo_manager.Service.GetGamesWithPhotos:output_type -> photo_manager.GetGamesWithPhotosResponse
	4, // 6: photo_manager.Service.GetPhotosByGameID:output_type -> photo_manager.GetPhotosByGameIDResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_photo_manager_photo_manager_proto_init() }
func file_photo_manager_photo_manager_proto_init() {
	if File_photo_manager_photo_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_photo_manager_photo_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGamePhotosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_manager_photo_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGamesWithPhotosRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_manager_photo_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGamesWithPhotosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_manager_photo_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhotosByGameIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_photo_manager_photo_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhotosByGameIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_photo_manager_photo_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_photo_manager_photo_manager_proto_goTypes,
		DependencyIndexes: file_photo_manager_photo_manager_proto_depIdxs,
		MessageInfos:      file_photo_manager_photo_manager_proto_msgTypes,
	}.Build()
	File_photo_manager_photo_manager_proto = out.File
	file_photo_manager_photo_manager_proto_rawDesc = nil
	file_photo_manager_photo_manager_proto_goTypes = nil
	file_photo_manager_photo_manager_proto_depIdxs = nil
}
